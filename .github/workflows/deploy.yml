name: Deploy DotEnv to VPS

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install -y rsync

      - name: Prepare VPS folder
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} << 'EOF'
          EOF

      - name: Telegram Notify — НАЧАЛО
        run: |
          for chat_id in 5126489808, 1433135801 ; do
            curl -s -X POST https://api.telegram.org/bot${{ secrets.TG_BOT_TOKEN }}/sendMessage \
              -d chat_id=$chat_id \
              -d parse_mode=Markdown \
              -d text=$'*Начало деплоя DotEnv*\n_Отправка и сборка проекта на сервере..._\nДеплоит: ${{ github.actor }}\nВремя: ${{ github.event.head_commit.timestamp }}\n[Коммит](${{ github.event.head_commit.url }})'
          done

      - name: Rsync project to VPS
        run: |
          rsync -avz --delete \
            --exclude '.git' \
            --exclude '.env' \
            --exclude 'db_data' \
            -e "ssh -o StrictHostKeyChecking=no" ./ \
            ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:~/KudakTJ


      - name: Deploy project
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} << 'EOF'
            set -o pipefail
            cd ~/DotEnv
            docker-compose down
            docker image prune -f
            docker-compose up -d --build --force-recreate --remove-orphans
          EOF


      - name: Telegram Notify — УСПЕШНО
        if: success()
        run: |
          for chat_id in 5126489808, 1433135801 ; do
            curl -s -X POST https://api.telegram.org/bot${{ secrets.TG_BOT_TOKEN }}/sendMessage \
              -d chat_id=$chat_id \
              -d parse_mode=Markdown \
              -d text=$'*Успешный деплой DotEnv*\n_Проект обновлён и запущен на сервере._\nДомен: https://dotenv.dastovard.tj\nДеплоил: ${{ github.actor }}\nВремя: ${{ github.event.head_commit.timestamp }}\n[Коммит](${{ github.event.head_commit.url }})' \
              -d reply_markup='{
                "inline_keyboard": [[
                  {
                    "text": "Открыть Swagger",
                    "url": "https://dotenv.dastovard.tj/swagger/index.html"
                  }
                ]]
              }'
          done

      - name: Telegram Notify — ОШИБКА
        if: failure()
        run: |
          DEPLOY_LOG=$(tail -n 50 deploy.log 2>/dev/null | sed 's/`/ʼ/g' || echo "Лог недоступен.")

          for chat_id in 5126489808, 1433135801 ; do
            curl -s -X POST https://api.telegram.org/bot${{ secrets.TG_BOT_TOKEN }}/sendMessage \
              -d chat_id=$chat_id \
              -d parse_mode=Markdown \
              --data-urlencode text=$'*Ошибка при деплое DotEnv*\nПроверь лог GitHub Actions.\nДеплоил: ${{ github.actor }}\n[Коммит](${{ github.event.head_commit.url }})\n\n```\n'"$DEPLOY_LOG"$'\n```'
          done